"use strict";(self.webpackChunkelfsquad=self.webpackChunkelfsquad||[]).push([[368],{1046:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var i=n(2122),a=n(9756),r=(n(7294),n(3905)),l=["components"],s={title:"Getting Started",sidebar_position:1},o="Get started using the SDK (C",d={unversionedId:"SDK-CSharp/getting-started",id:"SDK-CSharp/getting-started",isDocsHomePage:!1,title:"Getting Started",description:")",source:"@site/docs/SDK-CSharp/getting-started.md",sourceDirName:"SDK-CSharp",slug:"/SDK-CSharp/getting-started",permalink:"/docs/SDK-CSharp/getting-started",editUrl:"https://github.com/elfsquad/docs/edit/master/docs/SDK-CSharp/getting-started.md",version:"current",sidebarPosition:1,frontMatter:{title:"Getting Started",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Webhooks",permalink:"/docs/Webhooks"},next:{title:"Application Events",permalink:"/docs/SDK-CSharp/application-events"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Initializing the ElfskotApiClient",id:"initializing-the-elfskotapiclient",children:[]},{value:"Data management",id:"data-management",children:[{value:"Retrieving entities",id:"retrieving-entities",children:[]},{value:"Inserting entities",id:"inserting-entities",children:[]},{value:"Updating entities",id:"updating-entities",children:[]},{value:"Deleting entities",id:"deleting-entities",children:[]}]}],p={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"get-started-using-the-sdk-c"},"Get started using the SDK (C#)"),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Our SDK is available as a ",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Elfskot.Connect.SDK"},"NuGet package"),". Install the SDK using the NuGet package manager:\n",(0,r.kt)("inlineCode",{parentName:"p"},"Install-Package Elfskot.Connect.SDK")),(0,r.kt)("h2",{id:"initializing-the-elfskotapiclient"},"Initializing the ElfskotApiClient"),(0,r.kt)("p",null,"All interactions with the Elfskot API are done using the ",(0,r.kt)("em",{parentName:"p"},"ElfskotApiClient"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var elfskotApiClient = new ElfskotApiClient(new Guid("YOUR APPLICATION ID"),"YOUR SECRET");\n')),(0,r.kt)("h2",{id:"data-management"},"Data management"),(0,r.kt)("p",null,"Data management interactions are done through ManagementResources that can be directly accessed through ",(0,r.kt)("inlineCode",{parentName:"p"},"elfskotApiClient.Management"),"."),(0,r.kt)("h3",{id:"retrieving-entities"},"Retrieving entities"),(0,r.kt)("p",null,"To retrieve a entity by its ID you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"GetById"),"  method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var contact = elfskotApiClient\n    .Management\n    .CrmContacts\n    .GetById(new Guid("56448abb-f00e-45a8-b1ac-08c62c8ed8f5"));\n')),(0,r.kt)("p",null,"To retrieve multiple entities you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Get")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"var contacts = elfskotApiClient\n    .Management\n    .CrmContacts\n    .OrderBy(c => c.CreatedDate)\n    .Limit(10)\n    .Get();\n")),(0,r.kt)("h4",{id:"including-referenced-entities"},"Including referenced entities"),(0,r.kt)("p",null,"By default the API will not include referenced entities. So for example if you want to retrieve the lines of quotation you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Include")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var quotation = elfskotApiClient\n    .Management\n    .Quotations\n    .Include(q => q.Lines) // <-- Reference the entity you want to include.\n    .GetById(new Guid("56448abb-f00e-45a8-b1ac-08c62c8ed8f5"));\n\nforeach(var line in quotation.Lines)\n{\n}\n')),(0,r.kt)("h3",{id:"inserting-entities"},"Inserting entities"),(0,r.kt)("p",null,"To insert entities you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Create")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"BulkCreate")," methods:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var newCrmAccount = new CrmAccount()\n    {\n        CompanyName = "Brightwater Industries"\n    };\n\nnewCrmAccount = elfskotApiClient\n    .Management\n    .CrmAccounts\n    .Create(newCrmAccount);\n\nvar newIdentifier = newCrmAccount.Id;\n')),(0,r.kt)("h3",{id:"updating-entities"},"Updating entities"),(0,r.kt)("p",null,"To update a entity you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Update")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"BulkUpdate")," methods:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"quotation.Deliverydate = DateTimeOffset.Now;\nelfskotApiClient\n    .Management\n    .Quotations\n    .Update(quotation);\n")),(0,r.kt)("h3",{id:"deleting-entities"},"Deleting entities"),(0,r.kt)("p",null,"To delete a entity you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Delete")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'elfskotApiClient\n    .Management\n    .CrmContacts\n    .Delete(new Guid("56448abb-f00e-45a8-b1ac-08c62c8ed8f5"));\n')))}u.isMDXComponent=!0}}]);